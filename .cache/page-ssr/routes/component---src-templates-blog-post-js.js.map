{"version":3,"file":"component---src-templates-blog-post-js.js","mappings":"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","sources":["webpack://gatsby-starter-blog/../src/image-utils.ts","webpack://gatsby-starter-blog/../src/components/hooks.ts","webpack://gatsby-starter-blog/../src/components/picture.tsx","webpack://gatsby-starter-blog/../src/components/placeholder.tsx","webpack://gatsby-starter-blog/../src/components/main-image.tsx","webpack://gatsby-starter-blog/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-blog/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-blog/../src/components/static-image.server.tsx","webpack://gatsby-starter-blog/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/* eslint-disable no-unused-expressions */\nimport { stripIndent } from \"common-tags\"\nimport camelCase from \"camelcase\"\nimport { IGatsbyImageData } from \".\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.substr(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(stripIndent`\n    The requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport {\n  useState,\n  CSSProperties,\n  useEffect,\n  HTMLAttributes,\n  ImgHTMLAttributes,\n  ReactEventHandler,\n  SetStateAction,\n  Dispatch,\n  RefObject,\n} from \"react\"\nimport { Node } from \"gatsby\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport {\n  IGatsbyImageHelperArgs,\n  generateImageData,\n  Layout,\n  EVERY_BREAKPOINT,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\nconst imageCache = new Set<string>()\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport function storeImageloaded(cacheKey?: string): void {\n  if (cacheKey) {\n    imageCache.add(cacheKey)\n  }\n}\n\nexport function hasImageLoaded(cacheKey: string): boolean {\n  return imageCache.has(cacheKey)\n}\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nexport type ImageDataLike = FileNode | IGatsbyImageDataParent | IGatsbyImageData\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport async function applyPolyfill(\n  ref: RefObject<HTMLImageElement>\n): Promise<void> {\n  if (!(`objectFitPolyfill` in window)) {\n    await import(\n      // @ts-ignore typescript can't find the module for some reason ¯\\_(ツ)_/¯\n      /* webpackChunkName: \"gatsby-plugin-image-objectfit-polyfill\" */ `objectFitPolyfill`\n    )\n  }\n  ;(window as any).objectFitPolyfill(ref.current)\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  toggleLoaded?: (loaded: boolean) => void,\n  cacheKey?: string,\n  ref?: RefObject<HTMLImageElement>,\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  const onLoad: ReactEventHandler<HTMLImageElement> = function (e) {\n    if (isLoaded) {\n      return\n    }\n\n    storeImageloaded(cacheKey)\n\n    const target = e.currentTarget\n    const img = new Image()\n    img.src = target.currentSrc\n\n    if (img.decode) {\n      // Decode the image through javascript to support our transition\n      img\n        .decode()\n        .catch(() => {\n          // ignore error, we just go forward\n        })\n        .then(() => {\n          toggleLoaded(true)\n        })\n    } else {\n      toggleLoaded(true)\n    }\n  }\n\n  // Polyfill \"object-fit\" if unsupported (mostly IE)\n  if (ref?.current && !(`objectFit` in document.documentElement.style)) {\n    ref.current.dataset.objectFit = style.objectFit ?? `cover`\n    ref.current.dataset.objectPosition = `${style.objectPosition ?? `50% 50%`}`\n    applyPolyfill(ref)\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n    onLoad,\n    ref,\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport function useImageLoaded(\n  cacheKey: string,\n  loading: \"lazy\" | \"eager\",\n  ref: any\n): {\n  isLoaded: boolean\n  isLoading: boolean\n  toggleLoaded: Dispatch<SetStateAction<boolean>>\n} {\n  const [isLoaded, toggleLoaded] = useState(false)\n  const [isLoading, toggleIsLoading] = useState(loading === `eager`)\n\n  const rAF =\n    typeof window !== `undefined` && `requestAnimationFrame` in window\n      ? requestAnimationFrame\n      : function (cb: TimerHandler): number {\n          return setTimeout(cb, 16)\n        }\n  const cRAF =\n    typeof window !== `undefined` && `cancelAnimationFrame` in window\n      ? cancelAnimationFrame\n      : clearTimeout\n\n  useEffect(() => {\n    let interval: number\n    // @see https://stackoverflow.com/questions/44074747/componentdidmount-called-before-ref-callback/50019873#50019873\n    function toggleIfRefExists(): void {\n      if (ref.current) {\n        if (loading === `eager` && ref.current.complete) {\n          storeImageloaded(cacheKey)\n          toggleLoaded(true)\n        } else {\n          toggleIsLoading(true)\n        }\n      } else {\n        interval = rAF(toggleIfRefExists)\n      }\n    }\n    toggleIfRefExists()\n\n    return (): void => {\n      cRAF(interval)\n    }\n  }, [])\n\n  return {\n    isLoading,\n    isLoaded,\n    toggleLoaded,\n  }\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","/* eslint-disable filenames/match-regex */\nimport React, {\n  FunctionComponent,\n  ImgHTMLAttributes,\n  forwardRef,\n  LegacyRef,\n} from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n  innerRef: LegacyRef<HTMLImageElement>\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  innerRef,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n      ref={innerRef}\n    />\n  )\n}\n\nexport const Picture = forwardRef<HTMLImageElement, PictureProps>(\n  function Picture(\n    { fallback, sources = [], shouldLoad = true, ...props },\n    ref\n  ) {\n    const sizes = props.sizes || fallback?.sizes\n    const fallbackImage = (\n      <Image\n        {...props}\n        {...fallback}\n        sizes={sizes}\n        shouldLoad={shouldLoad}\n        innerRef={ref}\n      />\n    )\n\n    if (!sources.length) {\n      return fallbackImage\n    }\n\n    return (\n      <picture>\n        {sources.map(({ media, srcSet, type }) => (\n          <source\n            key={`${media}-${type}-${srcSet}`}\n            type={type}\n            media={media}\n            srcSet={shouldLoad ? srcSet : undefined}\n            data-srcset={!shouldLoad ? srcSet : undefined}\n            sizes={sizes}\n          />\n        ))}\n        {fallbackImage}\n      </picture>\n    )\n  }\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { forwardRef } from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage = forwardRef<HTMLImageElement, MainImageProps>(\n  function MainImage(props, ref) {\n    return (\n      <>\n        <Picture ref={ref} {...props} />\n        <noscript>\n          <Picture {...props} shouldLoad={true} />\n        </noscript>\n      </>\n    )\n  }\n)\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\n\nimport React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer: string | null = null\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {\n          // eslint-disable-next-line no-undef\n          SERVER && <NativeScriptLoading />\n        }\n      </Fragment>\n    )\n  }\n","import React, {\n  ElementType,\n  FunctionComponent,\n  CSSProperties,\n  WeakValidationMap,\n} from \"react\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImageHydrator: FunctionComponent<{\n  as?: ElementType\n  style?: CSSProperties\n  className?: string\n}> = function GatsbyImageHydrator({ as: Type = `div`, children, ...props }) {\n  return <Type {...props}>{children}</Type>\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n    if (preactClass) {\n      className = preactClass\n    }\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return (\n      <GatsbyImageHydrator\n        {...wrapperProps}\n        as={as}\n        style={{\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        }}\n        className={`${wClass}${className ? ` ${className}` : ``}`}\n      >\n        <LayoutWrapper layout={layout} width={width} height={height}>\n          <Placeholder\n            {...getPlaceholderProps(\n              placeholder,\n              false,\n              layout,\n              width,\n              height,\n              placeholderBackgroundColor,\n              objectFit,\n              objectPosition\n            )}\n          />\n\n          <MainImage\n            data-gatsby-image-ssr=\"\"\n            className={imgClassName}\n            {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n            // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n            {...getMainProps(\n              loading === `eager`,\n              false,\n              cleanedImages,\n              loading,\n              undefined,\n              undefined,\n              undefined,\n              imgStyle\n            )}\n          />\n        </LayoutWrapper>\n      </GatsbyImageHydrator>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author;\n  const social = data.site.siteMetadata?.social;\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/image.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Welcome to my blog. {author?.summary || null}\n          {` `}You can find me on &nbsp;\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            Twitter\n          </a>{\" \"}\n          and <a href=\"https://ckvignesh.hashnode.dev/\">Hashnode</a>.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Bio;\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","warn","message","console","sortNumeric","a","b","getSrcSet","images","map","image","src","width","join","formatFromFilename","filename","dot","lastIndexOf","ext","substr","length","setDefaultDimensions","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","u","format","toLowerCase","camelCase","Math","round","getLowResolutionImageURL","generateImageSource","fit","options","_generateImageSource","generateImageData","pluginName","reporter","backgroundColor","placeholderURL","Error","Set","size","has","add","imageSizes","imgDimensions","erroneousUserDimensions","Object","entries","filter","_","dim","outputPixelDensities","densities","dedupeAndSortDensities","calculated","getDimensionsAndAspectRatio","originalWidth","fixedDimension","stripIndent","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","getSizes","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","push","type","imageProps","placeholder","values","Array","from","concat","sort","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","max","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","childImageSharp","_node$childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_breakpoints","withArtDirection","defaultImage","artDirected","output","media","process","env","NODE_ENV","source","Image","loading","alt","shouldLoad","innerRef","React","decoding","undefined","ref","Picture","forwardRef","r","o","fallbackImage","key","propTypes","PropTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","_Picture$propTypes","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","style","paddingTop","maxWidth","display","role","position","LayoutWrapper","children","Fragment","removeNewLines","str","replace","GatsbyImageHydrator","as","Type","GatsbyImage","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","wClass","wrapperProps","cleanedImages","isLoaded","top","left","bottom","right","opacity","transition","getPlaceholderProps","isLoading","toggleLoaded","cacheKey","transform","willChange","onLoad","e","target","currentTarget","currentSrc","decode","then","getMainProps","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","toUpperCase","slice","input","isArray","TypeError","assign","pascalCase","postProcess","x","charAt","trim","hasUpperCase","p1","m","module","exports","default","Bio","data","author","site","siteMetadata","social","name","summary","twitter","Link","Layout","location","title","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","Helmet","Seo","description","lang","meta","metaDescription","defaultTitle","content","property","defaultProps","object","BlogPostTemplate","post","markdownRemark","siteTitle","previous","next","frontmatter","excerpt","date","html","flexWrap","justifyContent","listStyle","padding","fields","slug","pageQuery"],"sourceRoot":""}